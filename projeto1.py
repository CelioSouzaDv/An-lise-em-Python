# -*- coding: utf-8 -*-
"""Projeto1.ipynb
Automatically generated by Colaboratory.

# Primeiro projeto prático utilizando a linguagem Python para análise de dados;

# Utilizando as tabelas com dados relacionados a VENDAS, irei compilar e estrair os dados necessários para a análise;

# As informações serão: Protudos mais vendidos, Produto que mais faturou e a loja/cidade que mais vendeu;

# Com base nas informações/dados extraidos das tabelas foi criado um Dashboard informativo com os resultados.
"""
#import 'os' é utilizado para importar uma lista de arquivos em uma determinada pasta com o comando NOME-DA-LISTA=os.listdir('CAMINHO-DA-PASTA')

import os
import pandas as pd
import plotly.express as px

list_itens = os.listdir('/content/drive/MyDrive/Estudos Programação/Vendas')
display(list_itens)

# Comando For variavel in lista-de-itens: O comando irá rodar, para os comando que estiverem indentados dentro do For
# para que o For indentifiquei a variavel 'itens' o diretorio deve ser formatado com o comando Format=f. ficando nome da tabela = pd.read_tipo-do-arquivo(f'//diretorio-dos-arquivos{nome-do-arquivo}')
# If INDENTIFICADOR in varialvel-selecionada -  pode ser utilizado também o if not 'INDENTIFICADOR' in LOCAL-VARIAVEL
# Else, funciona "junto" com o if de forma contraria, por exemplo, If vendas in list-itens, vai mostrar os arquivos com 'vendas' no nome e ai utilizaria o else pra
# executar um segundo comando else: print(alguma mensagem) ai mostraria todos com nome vendas e o que n tem nome vendas apararece o comando do else
# para fazer uma "formatação" no nome dos arquivos caso seja o mesmo nome com caracteres diferentes voce pode usar o .lower = if 'vendas' in itens.lower():
new_table = pd.DataFrame()
for itens in list_itens:
    if 'Vendas' in itens:
        table = pd.read_csv(f'/content/drive/MyDrive/Estudos Programação/Vendas/{itens}')
        new_table = new_table.append(table)
        
display(new_table)

product_table = new_table.groupby('Produto').sum()
product_table = product_table[['Quantidade Vendida', 'Faturamento']].sort_values(by='Quantidade Vendida', ascending=False)
display(product_table)

new_table['Faturamento'] = new_table['Quantidade Vendida']* new_table['Preco Unitario']
invoicing_table = new_table.groupby('Produto').sum()
invoicing_table = invoicing_table [['Faturamento']].sort_values(by='Faturamento', ascending=False)
display(invoicing_table)

store_table = new_table.groupby('Loja').sum()
store_table = store_table[['Faturamento']].sort_values(by='Faturamento', ascending=False)
display(store_table)

graph = px.bar(store_table, x=store_table.index, y='Faturamento')
graph.show()
